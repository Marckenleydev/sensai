worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Upstream backend servers with load balancing
    upstream backend_servers {
        # Load balancing method (options: round_robin, least_conn, ip_hash, hash)
        least_conn;
        
        # Backend server instances
        server server1:8008 max_fails=3 fail_timeout=30s;
        server server2:8008 max_fails=3 fail_timeout=30s;
        server server3:8008 max_fails=3 fail_timeout=30s;
        
        # Health checks (nginx plus feature, or use basic max_fails)
        keepalive 32;
    }
    
    # Connection pooling for backends
    upstream backend_pool {
        server server1:8008;
        server server2:8008;
        server server3:8008;
        keepalive 300;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    server {
        listen 80;
        listen [::]:80;
        charset utf-8;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Main application proxy
        location ~ ^/server {
            # Remove /server prefix
            rewrite ^/server/(.*) /$1 break;
            
            # Proxy to load-balanced backends
            proxy_pass http://backend_servers;
            
            # HTTP version and headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts and buffering
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
            
            # Connection reuse
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Connection "";
        }
        
        # Static file serving with caching
        location /static/ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # API endpoint with stricter rate limiting
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            rewrite ^/api/(.*) /$1 break;
            proxy_pass http://backend_servers;
            
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Connection "";
        }
    }
}